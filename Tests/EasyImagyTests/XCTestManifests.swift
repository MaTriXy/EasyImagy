#if !canImport(ObjectiveC)
import XCTest

extension AnyImageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyImageTests = [
        ("testCopyOnWrite", testCopyOnWrite),
        ("testSequence", testSequence),
        ("testSlice", testSlice),
        ("testSubscript", testSubscript),
        ("testSubscriptRange", testSubscriptRange),
        ("testXRange", testXRange),
        ("testYRange", testYRange),
    ]
}

extension AppKitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AppKitTests = [
        ("testInitWithNSImage", testInitWithNSImage),
        ("testInitWithNSImagePerformance", testInitWithNSImagePerformance),
        ("testNSImage", testNSImage),
        ("testNSImagePerformance", testNSImagePerformance),
        ("testNSImageTiffRepresentation", testNSImageTiffRepresentation),
    ]
}

extension AppUIKitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AppUIKitTests = [
        ("testJPEGData", testJPEGData),
        ("testPNGData", testPNGData),
    ]
}

extension AutoreleaseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AutoreleaseTests = [
        ("testJPEGData", testJPEGData),
        ("testPNGData", testPNGData),
    ]
}

extension ColorLiteralTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ColorLiteralTests = [
        ("testPremultipliedRGBAInitWithColorLiteral", testPremultipliedRGBAInitWithColorLiteral),
        ("testRGBAInitWithColorLiteral", testRGBAInitWithColorLiteral),
    ]
}

extension ConvolutionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConvolutionTests = [
        ("testConvoluted", testConvoluted),
    ]
}

extension CoreGraphicsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CoreGraphicsTests = [
        ("testCGImageAndInitWithCGImage", testCGImageAndInitWithCGImage),
        ("testCGImagePerformance", testCGImagePerformance),
        ("testInitWithCGImagePerformance", testInitWithCGImagePerformance),
        ("testWithCGContext", testWithCGContext),
        ("testWithCGImage", testWithCGImage),
        ("testWithCGImagePerformance", testWithCGImagePerformance),
    ]
}

extension EasyImagySample {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EasyImagySample = [
        ("testAccessToAPixel", testAccessToAPixel),
        ("testCropping", testCropping),
        ("testInitialization", testInitialization),
        ("testIntroduction", testIntroduction),
        ("testResizing", testResizing),
        ("testRotation", testRotation),
        ("testSample", testSample),
        ("testWithCoreGraphics", testWithCoreGraphics),
        ("testWithNSImage", testWithNSImage),
        ("testWithUIImage", testWithUIImage),
    ]
}

extension ExtrapolationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ExtrapolationTests = [
        ("testSubscriptRangeWithExtrapolation", testSubscriptRangeWithExtrapolation),
        ("testSubscriptWithExtrapolation", testSubscriptWithExtrapolation),
    ]
}

extension HigherOrderFunctionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HigherOrderFunctionsTests = [
        ("testMap", testMap),
        ("testMapPerformance", testMapPerformance),
        ("testUpdate", testUpdate),
        ("testUpdatePerformance", testUpdatePerformance),
    ]
}

extension ImageOperatorsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ImageOperatorsTests = [
        ("testAdd", testAdd),
        ("testAddAsign", testAddAsign),
        ("testAnd", testAnd),
        ("testIsEqual", testIsEqual),
        ("testIsNotEqual", testIsNotEqual),
        ("testNegate", testNegate),
        ("testNot", testNot),
        ("testSubtractAsign", testSubtractAsign),
    ]
}

extension ImageProtocolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ImageProtocolTests = [
        ("testInitWithPixelAt", testInitWithPixelAt),
        ("testRotated", testRotated),
        ("testSlice", testSlice),
        ("testTransposed", testTransposed),
        ("testXReversed", testXReversed),
        ("testYReversed", testYReversed),
    ]
}

extension ImageSliceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ImageSliceTests = [
        ("testInit", testInit),
        ("testPixel", testPixel),
        ("testSequence", testSequence),
        ("testSubscriptRange", testSubscriptRange),
    ]
}

extension ImageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ImageTests = [
        ("testCopyOnWritePerformanceOfCopy", testCopyOnWritePerformanceOfCopy),
        ("testCopyOnWritePerformanceOfUpdate", testCopyOnWritePerformanceOfUpdate),
        ("testCopyPerformance", testCopyPerformance),
        ("testData", testData),
        ("testInitNamed", testInitNamed),
        ("testInitWithImageSlice", testInitWithImageSlice),
        ("testPixel", testPixel),
        ("testSequence", testSequence),
        ("testSubscriptGet", testSubscriptGet),
        ("testSubscriptRange", testSubscriptRange),
        ("testSubscriptSet", testSubscriptSet),
        ("testWithUnsafeBufferPointer", testWithUnsafeBufferPointer),
        ("testWithUnsafeBytes", testWithUnsafeBytes),
        ("testWithUnsafeMutableBufferPointer", testWithUnsafeMutableBufferPointer),
        ("testWithUnsafeMutableBytes", testWithUnsafeMutableBytes),
    ]
}

extension InterpolationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__InterpolationTests = [
        ("testSubscriptInterpolation", testSubscriptInterpolation),
        ("testSubscriptInterpolationWithExtrapolation", testSubscriptInterpolationWithExtrapolation),
    ]
}

extension PremultipliedRGBATests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PremultipliedRGBATests = [
        ("testInit", testInit),
    ]
}

extension RGBAOperatorsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RGBAOperatorsTests = [
        ("testAdd", testAdd),
        ("testAddAsign", testAddAsign),
        ("testAnd", testAnd),
        ("testNegate", testNegate),
        ("testNot", testNot),
        ("testSubtractAsign", testSubtractAsign),
    ]
}

extension RGBATests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RGBATests = [
        ("testDescription", testDescription),
        ("testGray", testGray),
        ("testInit", testInit),
    ]
}

extension ResizingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResizingTests = [
        ("testResized", testResized),
    ]
}

extension RotationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RotationTests = [
        ("testRotated", testRotated),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AnyImageTests.__allTests__AnyImageTests),
        testCase(AppKitTests.__allTests__AppKitTests),
        testCase(AppUIKitTests.__allTests__AppUIKitTests),
        testCase(AutoreleaseTests.__allTests__AutoreleaseTests),
        testCase(ColorLiteralTests.__allTests__ColorLiteralTests),
        testCase(ConvolutionTests.__allTests__ConvolutionTests),
        testCase(CoreGraphicsTests.__allTests__CoreGraphicsTests),
        testCase(EasyImagySample.__allTests__EasyImagySample),
        testCase(ExtrapolationTests.__allTests__ExtrapolationTests),
        testCase(HigherOrderFunctionsTests.__allTests__HigherOrderFunctionsTests),
        testCase(ImageOperatorsTests.__allTests__ImageOperatorsTests),
        testCase(ImageProtocolTests.__allTests__ImageProtocolTests),
        testCase(ImageSliceTests.__allTests__ImageSliceTests),
        testCase(ImageTests.__allTests__ImageTests),
        testCase(InterpolationTests.__allTests__InterpolationTests),
        testCase(PremultipliedRGBATests.__allTests__PremultipliedRGBATests),
        testCase(RGBAOperatorsTests.__allTests__RGBAOperatorsTests),
        testCase(RGBATests.__allTests__RGBATests),
        testCase(ResizingTests.__allTests__ResizingTests),
        testCase(RotationTests.__allTests__RotationTests),
    ]
}
#endif
